version: '3.3'

services:
    adminer:
        image: adminer
        restart: always
        ports:
            - 10502:8080
        depends_on:
            - database
    
    database:
        image: postgres
        restart: always
        env_file:
            - .env
        volumes:
            - database:/var/lib/postgresql/data:rw
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}

    minio:
        image: 'bitnami/minio:latest'
        restart: always
        ports:
            - '10501:9000'
        env_file:
            - .env
        volumes:
            - minio_data:/data:rw
        environment:
            MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
            MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
            MINIO_DEFAULT_BUCKETS: "javascript-games:public"

    api:
        build: ./api
        restart: always
        env_file:
            - .env
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_PORT: ${POSTGRES_PORT}
            MINIO_HOST: ${MINIO_HOST}
            MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
            MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
        volumes:
            - ./api/app:/app:ro
            - api_migrations:/migrations:rw
        depends_on:
            - database
            - minio

    web:
        build: ./web
        restart: always
        volumes:
            - ./web/app:/app
        depends_on:
            - api
    
    # We set-up an NGINX to have a unique endpoint for app & api
    nginx:
        build: ./nginx
        restart: always
        ports:
            - "10500:80"
        volumes:
            - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
            - ./logs/nginx:/var/log/nginx
        depends_on:
            - web
            - api

volumes:
    minio_data:
        driver: local
    database:
        driver: local
    api_migrations:
        driver: local